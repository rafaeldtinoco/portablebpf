From bddd4db8b2556223e2531b983a6c546fb44edd19 Mon Sep 17 00:00:00 2001
From: Rafael David Tinoco <rafaeldtinoco@ubuntu.com>
Date: Sat, 20 Mar 2021 01:05:25 -0300
Subject: [PATCH v2 bpf-next] libbpf: add bpf object kern_version attribute setter

Unfortunately some distros don't have their kernel version defined
accurately in <linux/version.h> due to different long term support
reasons.

It is important to have a way to override the bpf kern_version
attribute during runtime: some old kernels might still check for
kern_version attribute during bpf_prog_load().

Signed-off-by: Rafael David Tinoco <rafaeldtinoco@ubuntu.com>
---
 src/libbpf.c | 10 ++++++++++
 src/libbpf.h |  1 +
 2 files changed, 11 insertions(+)

diff --git a/src/libbpf.c b/src/libbpf.c
index 2f351d3..3b1c79f 100644
--- a/src/libbpf.c
+++ b/src/libbpf.c
@@ -8278,6 +8278,16 @@ int bpf_object__btf_fd(const struct bpf_object *obj)
 	return obj->btf ? btf__fd(obj->btf) : -1;
 }
 
+int bpf_object__set_kversion(struct bpf_object *obj, __u32 kern_version)
+{
+	if (obj->loaded)
+		return -1;
+
+	obj->kern_version = kern_version;
+
+	return 0;
+}
+
 int bpf_object__set_priv(struct bpf_object *obj, void *priv,
 			 bpf_object_clear_priv_t clear_priv)
 {
diff --git a/src/libbpf.h b/src/libbpf.h
index 3c35eb4..f73ec5b 100644
--- a/src/libbpf.h
+++ b/src/libbpf.h
@@ -143,6 +143,7 @@ LIBBPF_API int bpf_object__unload(struct bpf_object *obj);
 
 LIBBPF_API const char *bpf_object__name(const struct bpf_object *obj);
 LIBBPF_API unsigned int bpf_object__kversion(const struct bpf_object *obj);
+LIBBPF_API int bpf_object__set_kversion(struct bpf_object *obj, __u32 kern_version);
 
 struct btf;
 LIBBPF_API struct btf *bpf_object__btf(const struct bpf_object *obj);
-- 
2.27.0

